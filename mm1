-- Config
_G.KeepAmount = {
    ["Beanstalk"] = 20,       -- giữ lại 10 cây Beanstalk (dư event)
    ["Giant Pinecone"] = 5,   -- giữ lại 5
    ["Crown Melon"] = 5,      -- giữ lại 5
    ["Tall Asparagus"] = 5,   -- giữ lại 5
    ["Bamboo"] = 5,           -- giữ lại 5 (nếu thích trang trí thì tăng lên 10)
    ["Cacao"] = 5             -- giữ lại 5 (có thể nâng lên 10 nếu muốn)
}

_G.Treelist = {
    "Sugar Apple", "Burning Bud", "Ember Lily", "Flare Daisy",
    "Duskpuff", "Pepper", "Dragon Fruit", "Sugarglaze",
    "Elder Strawberry", "Orange Tulip", "Taco Fern",
    "Apple", "Mango", "Grape", "Blueberry", "Coconut",
    "Corn", "Onion", "Strawberry", "Tomato",
    "Pumpkin", "Watermelon", "Badlands Pepper", "Romanesco"
}
_G.Remove = true

-- Không cần chỉnh đoạn dưới nếu bạn không biết rõ

local player = game.Players.LocalPlayer

local function getOwnedPlot()
    for _, plot in pairs(workspace.Farm:GetChildren()) do
        local important = plot:FindFirstChild("Important") or plot:FindFirstChild("Importanert")
        if important then
            local data = important:FindFirstChild("Data")
            if data and data:FindFirstChild("Owner") and data.Owner.Value == player.Name then
                return plot
            end
        end
    end
    return nil
end

local function EquipShovel()
    local shovel = player.Backpack:FindFirstChild("Shovel [Destroy Plants]")
    if shovel then
        shovel.Parent = player.Character
    end
end

-- Đếm số lượng cây hiện có theo tên
local function countPlant(plot, plantName)
    local count = 0
    for _, plant in pairs(plot.Important.Plants_Physical:GetChildren()) do
        if string.match(plant.Name, plantName) then
            count += 1
        end
    end
    return count
end

-- Kiểm tra tên cây có trong danh sách không
local function isInTreelist(treeName)
    for _, name in pairs(_G.Treelist) do
        if string.match(treeName, name) then
            return true
        end
    end
    return false
end

local function DestroyTree()
    local success, err = pcall(function()
        if not _G.Remove then return end
        local plot = getOwnedPlot()
        if not plot then return end
        EquipShovel()

        for _, plant in pairs(plot.Important.Plants_Physical:GetChildren()) do
            if plant:IsA("Model") and not isInTreelist(plant.Name) then
                local keepLimit = _G.KeepAmount[plant.Name]
                if keepLimit then
                    local currentCount = countPlant(plot, plant.Name)
                    if currentCount > keepLimit then
                        -- chỉ xóa nếu vượt quá số lượng cần giữ
                        local part = plant.PrimaryPart or plant:FindFirstChildWhichIsA("BasePart")
                        if part then
                            game.ReplicatedStorage.GameEvents.Remove_Item:FireServer(part)
                            task.wait(0.05)
                        end
                    end
                else
                    -- nếu không có config giữ lại thì xóa hết
                    local part = plant.PrimaryPart or plant:FindFirstChildWhichIsA("BasePart")
                    if part then
                        game.ReplicatedStorage.GameEvents.Remove_Item:FireServer(part)
                        task.wait(0.05)
                    end
                end
            end
        end
    end)
    if not success then
        warn("Lỗi khi xóa cây: " .. err)
    end
end

while task.wait(3) do
    DestroyTree()
end
